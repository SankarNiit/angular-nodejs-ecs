version: 0.2
env:
  secrets-manager:
    LOGIN: "SONAR_NODE_CLOUD:SONAR_TOKEN"
    HOST: "SONAR_NODE_CLOUD:SONAR_HOST"
    Organization: "SONAR_NODE_CLOUD:SONAR_ORG"
    Project: "SONAR_NODE_CLOUD:SONAR_PROJ"
    ARTIFACTORY_USER: "ARTIFACTORY_CLOUD:JFROG_ART_USER"
    ARTIFACTORY_URL: "ARTIFACTORY_CLOUD:JFROG_NODE_URL"
    ARTIFACTORY_DOCKER_URL: "ARTIFACTORY_CLOUD:JFROG_DOCKER_URL"
    ARTIFACTORY_MVN_REPO: "ARTIFACTORY_CLOUD:JFROG_MVN_REPO"
    ARTIFACTORY_API_KEY: "ARTIFACTORY_CLOUD:JFROG_API_KEY"
    ARTIFACTORY_PASSWORD: "ARTIFACTORY_CLOUD:JFROG_ART_PASS"
phases:
  install:
    runtime-versions:
      nodejs: latest
    commands:
      - wget https://dl.bintray.com/jfrog/jfrog-cli-go/1.12.1/jfrog-cli-linux-amd64/jfrog
      - chmod +x jfrog
  pre_build:
    commands:
      - apt-get update
      - apt-get install -y jq
      - npm install -g sonarqube-scanner
      - echo Running login to ECR...
      - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 913536217213.dkr.ecr.eu-west-2.amazonaws.com
      - echo Entering pre_build phase...
      - ./jfrog rt config --url $ARTIFACTORY_URL --user $ARTIFACTORY_USER --apikey $ARTIFACTORY_API_KEY
  build:
    commands:
      - echo Build started on `date`
      - cd $CODEBUILD_SRC_DIR
      - sonar-scanner -Dsonar.login=$LOGIN -Dsonar.host.url=$HOST -Dsonar.projectKey=$Project -Dsonar.organization=$Organization
      - sleep 5
      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project >result.json
      - cat result.json
      - if [ $(jq -r '.projectStatus.status' result.json) != ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi
      - npm install
      - ls
      - ls target
      - pwd
      - ls
      #- cp target/nodejs-app-1.1 nodeJS
      - docker build -t nodejs-app .
      
  post_build:
    commands:
     - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 913536217213.dkr.ecr.eu-west-2.amazonaws.com
     - IMAGE_TAG="test-1.0.0"
     - REPOSITORY_URI=913536217213.dkr.ecr.eu-west-2.amazonaws.com/docker-nodejs-app
     - docker tag nodejs-app:latest 913536217213.dkr.ecr.eu-west-2.amazonaws.com/docker-nodejs-app:$IMAGE_TAG
     - docker push 913536217213.dkr.ecr.eu-west-2.amazonaws.com/docker-nodejs-app:$IMAGE_TAG
     - echo $CODEBUILD_SRC_DIR
     - cd $CODEBUILD_SRC_DIR/target
     - printf '[{"name":"nodejs-app","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
     - ls
     - cat imagedefinitions.json
     - curl -H "X-JFrog-Art-Api:$ARTIFACTORY_API_KEY" -T *.json "$ARTIFACTORY_URL"
     #- curl -H "X-JFrog-Art-Api:$ARTIFACTORY_API_KEY" -T *.jar "$ARTIFACTORY_URL"
artifacts:
  files:
  #- target/nodejs-app-1.1
  - target/imagedefinitions.json
  - result.json
